# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build + Sonar Analysis + Deploy To DockerHub

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_greetings_ui:
    name: Build Greetings UI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./greetings-ui
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONARCLOUDKEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Build
        run: npm install
      - name: Tests
        run: npm test
      - name: Pact
        run: npm run pact
      - name: Sonar
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./greetings-ui
  build_greetings:
    name: Build Greetings
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./greetings-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-greetings-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-greetings-m2-
      - name: Build
        working-directory: ./greetings-service
        run: mvn -B -T 1C -Pcoverage clean compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Unit Test
        working-directory: ./greetings-service
        run: mvn -B -T 1C -Pcoverage test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Integration Test
        working-directory: ./greetings-service
        run: mvn -B -T 1C -Pcoverage verify -DskipUTs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Sonar Analysis
        working-directory: ./greetings-service
        run: mvn -B -Pcoverage org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -DskipTests -DskipUTs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUDKEY }}
  build_stats:
    name: Build Stats
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./greetings-stat-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-stats-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-stats-m2-
      - name: Build
        working-directory: ./greetings-stat-service
        run: mvn -B -T 1C -Pcoverage clean compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Unit Test
        working-directory: ./greetings-stat-service
        run: mvn -B -T 1C -Pcoverage test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Integration Test
        working-directory: ./greetings-stat-service
        run: mvn -B -T 1C -Pcoverage verify -DskipUTs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Sonar Analysis
        working-directory: ./greetings-stat-service
        run: mvn -B -Pcoverage org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -DskipTests -DskipUTs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUDKEY }}

  deploy_greetings:
    name: Deploy Greetings
    runs-on: ubuntu-latest
    needs: build_greetings
    if: success() && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/spring_boot_3')
    defaults:
      run:
        working-directory: ./greetings-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-greetings-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-greetings-m2-
      - name: Package + deploy
        working-directory: ./greetings-service
        run: mvn -B -DskipTests -DskipUTs -PbuildImage package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  deploy_stats:
    name: Deploy Stats
    runs-on: ubuntu-latest
    needs: build_stats
    if: success() && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/spring_boot_3')
    defaults:
      run:
        working-directory: ./greetings-stat-service
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-stats-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-stats-m2-
      - name: Package + deploy
        working-directory: ./greetings-stat-service
        run: mvn -B -DskipTests -DskipUTs -PbuildImage package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [ deploy_stats, deploy_greetings ]
    if: success()
    defaults:
      run:
        working-directory: ./greetings-e2e
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: 'maven'
      - name: E2E Tests
        run: mvn -B test --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}