# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build + Sonar Analysis + Deploy To DockerHub

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_greetings:
    name: Build Greetings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Build + Analysis Greetings Service
        working-directory: ./greetings-service
        #        -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
        run: mvn -B -Pcoverage clean verify sonar:sonar --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUDKEY }}

  build_stats:
    name: Build Stats
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Build + Analysis Stats Service
        working-directory: ./greetings-stat-service
        run: mvn -B -Pcoverage clean verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=$(find "$(pwd)" -path '*jacoco*.xml' | sed 's/.*/&/' | tr '\n' ',') --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUDKEY }}

  deploy_greetings:
    name: Deploy Greetings
    runs-on: ubuntu-latest
    needs: build_greetings
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Package + deploy
        working-directory: ./greetings-service
        run: mvn -B -DskipTests -PbuildImage package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  deploy_stats:
    name: Deploy Stats
    runs-on: ubuntu-latest
    needs: build_stats
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Package + deploy
        working-directory: ./greetings-stat-service
        run: mvn -B -DskipTests -PbuildImage package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}